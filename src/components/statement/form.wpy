<template lang="wxml">
  <form bindsubmit="formSubmit">
    <view class="container">
      <view class="column money">
        <text>金额</text>
        <input class="money-input {{ statement.type }}" placeholder="0.00" placeholder-class="{{ statement.type }}" bindinput="handleAmountInput" name="amount" type="digit" value="{{ statement.amount }}"/>
      </view>

      <view class="column" @tap="redirectChoseCategory">
        <text>分类</text>
        <text type="digit" class="align-right">{{ statement.category_name }}</text>
        <input hidden name="category_id" value="{{ statement.category_id }}"/>
      </view>

      <view class="frequent-use" wx:if="{{ categories_labels.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ categories_labels }}" @tap="setCategory({{item}})">{{ item.name }}</text>
      </view>

      <view class="column" @tap="redirectChoseAsset">
        <text>账户</text>
        <text class="align-right">{{ statement.asset_name }}</text>
        <input hidden name="asset_id" value="{{ statement.asset_id }}"/>
      </view>

      <view class="frequent-use" wx:if="{{ assets_labels.length > 0 }}">
        <text>猜你想用：</text>
        <text class="label" wx:for="{{ assets_labels }}" @tap="setAsset({{ item }})">{{ item.name }}</text>
      </view>
      
      <view class="column">
        <text>日期</text>
        <picker mode="date" start="2017-01-01" bindchange="dateChange">
          <text>{{ statement.date }}</text>
        </picker>
        <input hidden name="date" value="{{ statement.date }}"/>
        <input hidden name="time" value="{{ statement.time }}"/>
      </view>

      <view class="frequent-use">
        <text>快速选择：</text>
        <text class="label" @tap="quickSetDate('-2')">前天</text>
        <text class="label" @tap="quickSetDate('-1')">昨天</text>
        <text class="label" @tap="quickSetDate('0')">今天</text>
      </view>
      
      <view class="column">
        <text>备注</text>
        <input class="remark" type="text" name="description" bindinput="handleDescInput" value="{{ statement.description }}" placeholder="本笔账单的简单说明"/>
      </view>

      <view class="upload-picture">
        <view class="title">上传图片</view>
        <view class="img-list">
          <view class="image-item" @tap="uploadImage">
            <image src="../../public/images/add-2.png"  lazy-load="false"></image>
          </view>
          <view class="image-item user-upload-item" wx:for="{{ statement.upload_files }}">
            <image src="{{ item }}" @tap="showPicture('{{ item }}')" lazy-load="false"></image>
            <view class="close" @tap="deleteImage('{{ item }}')">X</view>
          </view>
        </view>
      </view>

      <view class="btn-save">
        <button wx:if="{{ !submiting }}" formType="submit">保存</button>
        <button wx:else>保存中...</button>
        <input hidden name="type" value="{{ statement.type }}"/>
      </view>
    </view>
  </form>
</template>

<script>
import wepy from 'wepy'
import wxRequest from '@/utils/wxRequest'
import Session from '@/utils/session'
import tip from '@/utils/tip'
import Util from '@/utils/util.js'

export default class StatementFormComponent extends wepy.component {
  props = {
    statement: {
      type: Object,
      default () {
        return {
          id: 0,
          type: 'expend',
          category_id: 0,
          asset_id: 0,
          amount: '',
          description: '',
          date: '',
          address: '',
          time: '',
          category_name: '请选择分类',
          asset_name: '请选择账户',
          upload_files: []
        }
      }
    },
    submiting: {
      type: Boolean,
      default: false
    },
    type: String
  }

  data = {
    assets_labels: [],
    categories_labels: [],
    switchCheck: Session.get('getLocationSwitch') || false
  }

  onLoad () {
    this.statement.type = this.type
    if (this.statement.id === 0) {
      this.initTodayDate()
    }
    this.guessCategory()
    this.guessAsset()
  }

  initTodayDate () {
    const myDate = new Date()
    let year = myDate.getFullYear()
    let month = myDate.getMonth() + 1
    let day = myDate.getDate()
    if (month < 10) month = `0${month}`
    if (day < 10) day = `0${day}`
    this.statement.date = [year, month, day].join('-')
    this.statement.time = Util.getCurrentTime()
  }

  async guessCategory () {
    const data = await wxRequest.Get('statements/category_frequent', { type: this.statement.type })
    this.categories_labels = data
    this.$apply()
  }

  async guessAsset () {
    const data = await wxRequest.Get('statements/asset_frequent', { type: this.statement.type })
    this.assets_labels = data
    this.$apply()
  }

  methods = {
    dateChange({ detail }) {
      this.statement.date = detail.value
    },
    redirectChoseAsset () {
      wx.navigateTo({ url: `/pages/statements/chose_asset?type=${this.statement.type}` })
    },
    redirectChoseCategory () {
      wx.navigateTo({ url: `/pages/statements/chose_category?type=${this.statement.type}` })
    },
    handleAmountInput ({ detail }) {
      this.statement.amount = detail.value
    },
    handleDescInput ({ detail }) {
      this.statement.description = detail.value
    },
    setAsset (asset) {
      this.statement.asset_id = asset.id
      this.statement.asset_name = asset.name
    },
    setCategory (category) {
      this.statement.category_id = category.id
      this.statement.category_name = category.name
    },
    async formSubmit ({ detail }) {
      const statement = detail.value
      if (statement.amount == 0 || statement.amount == '') {
        tip.error('金额不能为零')
        return false
      }

      if (statement.category_id == 0) {
        tip.error('未选择分类')
        return false
      }

      if (statement.asset_id == 0) {
        tip.error('未选择账户')
        return false
      }

      statement.upload_files = this.statement.upload_files
      this.$emit('submit', statement, detail)
    },
    showPicture (item) {
      wx.previewImage({
        current: item,
        urls: this.statement.upload_files
      })
    },
    quickSetDate (between) {
      const today = new Date()
      let date = today
      if (between == -1) {
        date = new Date(today.getTime() - 24*60*60*1000)
      } else if (between == -2) {
        date = new Date(today.getTime() - 2*24*60*60*1000);
      }
      const year = date.getFullYear()
      let month = date.getMonth() + 1
      let day = date.getDate()
      if (month < 10) month = '0' + month
      if (day < 10) day = '0' + day
      this.statement.date = [year, month, day].join('-')
    },
    deleteImage (item) {
      const index = this.statement.upload_files.indexOf(item)
      this.statement.upload_files.splice(index, 1)
    },
    async uploadImage () {
      const choseImages = await wepy.chooseImage({
        count: 5,
        sizeType: ['compressed'],
        sourceType: ['album', 'camera']
      })
      this.statement.upload_files = [...this.statement.upload_files, ...choseImages.tempFilePaths]
      this.$apply()
    }
  }
}
</script>
<style lang="scss" src="../../public/styles/statement/statement.scss"></style>